December 22, 2015
Working on the harmonization of vbsr and vbsrR.  Brainstorming ways in which to compare the states.  Currently they are similar but not producing the exact same results for the same simulated data set.
1) Fix the lower bound function in original vbsr (still working on this) DONE
2) Harmonize initial conditions DONE
3) Track the updates of each state parameter and see where they diverge. DONE
4) Go through each set of updates by hand DONE

January 5, 2016
Success, vbsr and vbsrR are giving the same results in the testing script. There does appear to still be an issue with the data normalization function, I'll have to look into that in the C code. fixed
0) synchronize lower bound DONE
1) get rid of debugging output DONE
2) get rid of iterations for vbsrR DONE
3) fix scaling function in the C code DONE
4) check that entropy checks are correct
5) refactor vbsr C code

January 6, 2016
There was a bug in the post processing step to rescale the parameters.  Need to implement functionality to rescale beta estimates.  Next steps for cleaning up C code
0) split out utility functions into an independent library
1) rename utility functions with more informative names
2) switch all names of functions to camelcase
3) get rid of marginal analysis
4) plot out general schema to incorporate additional methods into library
  i) build better structs to allow for general tool kit
5) make pointer arithmetic much clearer

January 8, 2016 - finish all by June 1! Linpack, Lapack, blas
0) putting together audit of all current functions in the C code
1) generalize data structures to anticipate
  i) vb mixed effect version (matrices?) - implement in R first
  ii) vb group spike (matrices?) - implement in R first
  iii) exact regression
  iv) exact group spike
  v) exact mixed effect
  vi) generalized linear model (irls)
  vii) m-estimators
  viii) gee's
  vii) multinomial
  viii) gaussian graphical model
  x) +slab
2) tensor flow
3) hadoop?

January 11, 2016
Working on C code audit (finished)

January 17, 2016
Best strategy moving forward
 - finish C code clean up (naming, removing redundant features)
 - stochastic EM algorithm (ordering-> iterations)
 - remove marginal analysis
 - clean up corresponding R code (R code audit)
 - figure out how to integrate the spikeUtilities as a separate library
 - add stochasticEM as a separate library
 - add each vb/stochEM glm function as a separate library
 - do tests for stochEM
 - linear mixed effect models (vb/stochEM)
 - group spike
 - +slab
 - add CV1se

 January 18, 2016
 - Finish updating header file of gaussianVariationalBayesSpikeRegression
  by harmonizing all new names for variables, functions, and structs
 - Update .c/.r files
    -harmonize with header (and spike utilities header) in terms of all new names/functions/structs
    -update inputs from R
    -improve model comparison function
    -add additional model Results (full model space)
    -add all model parameters as output to R
    -update R function (get rid of marginal analysis, majorly clean up code)
    -add unpenalized covariate update function (separately)
    -add lower bound test
    -debug
    -valgrind
    -time analyze, identify if their are any major inefficiencies to be optimized over
-Figure out how to add s3 model functionality so print, summarize, plot functions can be applied to the output
-Implement stochastic EM C function
-build stochastic EM/Vbsr R integration
-build stochastic EM/VBSR C integration
-develop a battery of rigorous tests on real and simulated data for all
-

January 19, 2016
NEW IDEA: assign md5 checksums to each identified model (i.e. produce a hash table over the model parameters struct)

Hammering away on vbsr.R to clean it up
n -> numberSamples
m -> numberPenalizedFeatures
total_replicates -> totalModelFits
remove beta_chi_mat
beta_mu_mat -> betaMuResult
beta_sigma_mat <- betaSigmaSquaredResult
e_beta_mat <- expectationBetaResult
beta_p_mat <- posteriorProbabilityBetaResult
lb_mat <- lowerBoundResult
y <- responseVariable
X <- penalizedDataMatrix
Z <- unpenalizedDataMatrix

1) figure out how to pass a list to C with everything in it so I can reduce the number of calls

January 21, 2016
still working on the general clean up of vbsr code

January 25, 2016
working on code clean up!
